//usage: $ ./gradlew -b test-pipeline.gradle updateJenkinsItems

apply plugin: 'com.terrafolio.jenkins'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://repo.jenkins-ci.org/releases/"
        }
    }
    dependencies {
        classpath('com.terrafolio:gradle-jenkins-plugin:1.3.3')
    }
}

project.ext {
    projectName = 'TEST'
    useGradleStep = project.hasProperty('useGradleStep') && ['on', 'true'].contains(project.properties.useGradleStep)
    defaultReceipients = ''
    defaultSubject = ''
    defaultContent = ''
}

jenkins {
    servers {
        localdemo {
            url "http://localhost:8080"
            username "admin"
            password "admin"
        }
    }

    defaultServer servers.localdemo
    
    jobs {
        exampleJob {
            dsl {
                description "funky test job for ${projectName}.<br>\nSee https://github.com/ghale/gradle-jenkins-plugin/wiki for DSL syntax."

                //steps {
                //    powerShell('Write-Output "Hello World!"')
                //}

                // discard old builds:
                logRotator(7, 49) // daysToKeep, numBuildsToKeep
                publishers {
                    // use build-pipeline-plugin
                    // https://wiki.jenkins-ci.org/display/JENKINS/Build+Pipeline+Plugin
                    downstream('exampleJob2', 'SUCCESS')
                }
            }
        }

        exampleJob2 {
            dsl {
                description "funky test job for ${projectName}.<br>\nSee https://github.com/ghale/gradle-jenkins-plugin/wiki for DSL syntax."

                steps {
                    shell('ansible --version')
                }

                // discard old builds:
                logRotator(7, 49) // daysToKeep, numBuildsToKeep
            }
        }

        
    }

}
